# -*- coding: utf-8 -*-
"""Pytorch_2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-2ig_yQkXZEbrFNdyiTGmgxiI9LncI3C
"""

import  torch
print(torch.__version__)

"""Inplace Operations"""

m = torch.rand(2,3)
n = torch.rand(2,3)

print(m)
print(n)

m+n

#Here we are adding m+n, but we are saving the sum in m
m.add_(n)

x = torch.tensor([1.0, 2.0, 3.0])
x.add_(2)  # In-place addition
print(x)  # Output: tensor([3.0, 4.0, 5.0])

x = torch.tensor([1, 2, 3])
y = x.add_(1)  # y and x refer to the same data
print(x)  # Output: tensor([2, 3, 4])
print(y)  # Output: tensor([2, 3, 4]) (same as x)

x = torch.tensor([1, 2, 3])
y = x.add_(1)  # y and x refer to the same data
print(x)  # Output: tensor([2, 3, 4])
print(y)  # Output: tensor([2, 3, 4]) (same as x)

"""**Copying a Tensor**"""

a=torch.tensor([1,2,3])
b=a.clone() #used to clone a tensor
print(a)
print(b)

id(a)

id(b)

"""Checking GPU is available or not"""

torch.cuda.is_available()

"""Reshaping Tensors"""

a=torch.ones(4,4)
a

#here we are converting a 4*4 tensor into 2*2*2*2,
a.reshape(2,2,2,2)

#here we are flattening a 4*4 tensor
a.flatten()
a

